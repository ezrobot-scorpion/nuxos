/*!
********************************************************************************
* @file     : nxrtlapi.h
*
* @brief    :
*
* @version  : V0.0.1
*
* @copyright: All Rights Reserved.
********************************************************************************
* @changelog: L.H.T 2017-12-14 first version
*******************************************************************************/
#ifndef INCLUDE_NX_RTL_API_H
#define INCLUDE_NX_RTL_API_H

/*!
********************************************************************************
* INCLUDES
*******************************************************************************/
#include <nxdef.h>

#ifdef __cplusplus
extern "C" {
#endif

/*!
********************************************************************************
* CONTANTS
*******************************************************************************/

/*!
********************************************************************************
* TYPE DEFINES
*******************************************************************************/

/*!
********************************************************************************
* INLINE FUNCTIONS
*******************************************************************************/
/*!
********************************************************************************
* @brief :
*
* @param :
*
* @retval:
*******************************************************************************/
FORCEINLINE
VOID
vRtlListInitHead(KLIST_HEAD *ListHead)
{
	ListHead->Flink = ListHead->Blink = ListHead;
}

/*!
********************************************************************************
* @brief :
*
* @param :
*
* @retval:
*******************************************************************************/
FORCEINLINE
BOOL
vRtlListIsEmpty(KLIST_HEAD *ListHead)
{
	return (BOOL)(ListHead->Flink == ListHead);
}

/*!
********************************************************************************
* @brief :
*
* @param :
*
* @retval:
*******************************************************************************/
FORCEINLINE
BOOL
vRtlListRemoveElem(KLIST_ELEM *ListElem)
{
	KLIST_ELEM *NextElem;
	KLIST_ELEM *PrevElem;

	NextElem = ListElem->Flink;
	PrevElem = ListElem->Blink;
	PrevElem->Flink = NextElem;
	NextElem->Blink = PrevElem;

	return (BOOL)(NextElem == PrevElem);
}

/*!
********************************************************************************
* @brief :
*
* @param :
*
* @retval:
*******************************************************************************/
FORCEINLINE
VOID
vRtlListInsertHeadElem(KLIST_HEAD *ListHead, KLIST_ELEM *ListElem)
{

}

/*!
********************************************************************************
* @brief :
*
* @param :
*
* @retval:
*******************************************************************************/
FORCEINLINE
VOID
vRtlListInsertTailElem(KLIST_HEAD *ListHead, KLIST_ELEM *ListElem)
{

}

/*!
********************************************************************************
* @brief :
*
* @param :
*
* @retval:
*******************************************************************************/
FORCEINLINE
KLIST_ELEM *
vRtlListRemoveHeadElem(KLIST_HEAD *ListHead)
{
	return NULL;
}

/*!
********************************************************************************
* @brief :
*
* @param :
*
* @retval:
*******************************************************************************/
FORCEINLINE
KLIST_ELEM *
vRtlListRemoveTailElem(KLIST_HEAD *ListHead)
{
	return NULL;
}

/*!
********************************************************************************
* PUBLIC FUNCTIONS
*******************************************************************************/

#ifdef __cplusplus
}
#endif
#endif /* INCLUDE_NX_RTL_API_H */
